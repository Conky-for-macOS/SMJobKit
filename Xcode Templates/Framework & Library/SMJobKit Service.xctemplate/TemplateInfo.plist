<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>net.nevir.SMJobKit.Service</string>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template builds a SMJobKit Service</string>
	<key>SortOrder</key>
	<integer>3</integer>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.macReferenceCounting</string>
	</array>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>productName</string>
			<key>Required</key>
			<true/>
			<key>Name</key>
			<string>Service Name</string>
			<key>NotPersisted</key>
			<true/>
			<key>Description</key>
			<string>Your new SMJobKit service&apos;s name</string>
			<key>EmptyReplacement</key>
			<string>ServiceName</string>
			<key>Type</key>
			<string>text</string>
		</dict>
		<dict>
			<key>Identifier</key>
			<string>bundleIdentifierPrefix</string>
			<key>Required</key>
			<true/>
			<key>Name</key>
			<string>Company Identifier</string>
			<key>Description</key>
			<string>Your company&apos;s bundle identifier prefix</string>
			<key>EmptyReplacement</key>
			<string>com.yourcompany</string>
			<key>Type</key>
			<string>text</string>
		</dict>
		<dict>
			<key>Identifier</key>
			<string>bundleIdentifier</string>
			<key>Name</key>
			<string>Bundle Identifier</string>
			<key>NotPersisted</key>
			<true/>
			<key>Description</key>
			<string>Your new service&apos;s bundle and launchd identifier</string>
			<key>Default</key>
			<string>___VARIABLE_bundleIdentifierPrefix:bundleIdentifier___.&lt;Project&gt;.___VARIABLE_productName___</string>
			<key>Type</key>
			<string>static</string>
		</dict>
	</array>
	<key>Project</key>
	<dict>
		<key>SharedSettings</key>
		<dict>
			<key>CODE_SIGN_IDENTITY</key>
			<string>Mac Developer</string>
			<key>GCC_C_LANGUAGE_STANDARD</key>
			<string>gnu99</string>
			<key>GCC_WARN_ABOUT_RETURN_TYPE</key>
			<string>YES</string>
			<key>GCC_WARN_UNINITIALIZED_AUTOS</key>
			<string>YES</string>
			<key>GCC_WARN_UNUSED_VARIABLE</key>
			<string>YES</string>
			<key>ALWAYS_SEARCH_USER_PATHS</key>
			<string>NO</string>
		</dict>
		<key>Configurations</key>
		<dict>
			<key>Debug</key>
			<dict>
				<key>GCC_OPTIMIZATION_LEVEL</key>
				<string>0</string>
				<key>GCC_PREPROCESSOR_DEFINITIONS</key>
				<string>DEBUG=1 $(inherited)</string>
				<key>COPY_PHASE_STRIP</key>
				<string>NO</string>
				<key>GCC_DYNAMIC_NO_PIC</key>
				<string>NO</string>
			</dict>
			<key>Release</key>
			<dict>
				<key>COPY_PHASE_STRIP</key>
				<string>YES</string>
			</dict>
		</dict>
	</dict>
	<key>Targets</key>
	<array>
		<dict>
			<key>ProductType</key>
			<string>com.apple.product-type.tool</string>
			<key>SharedSettings</key>
			<dict>
				<key>PRODUCT_NAME</key>
				<string>___VARIABLE_bundleIdentifierPrefix:bundleIdentifier___.$(PROJECT_NAME).$(TARGET_NAME)</string>
				<key>SMJ_PREPROCESS_DIR</key>
				<string>$(BUILD_DIR)/Preprocessed</string>
				<key>SMJ_PREPROCESS_FILES</key>
				<string>___PACKAGENAME___/___PACKAGENAMEASIDENTIFIER___-Info.plist, ___PACKAGENAME___/___PACKAGENAMEASIDENTIFIER___-Launchd.plist</string>
				<key>OTHER_LDFLAGS</key>
				<string>-sectcreate __TEXT __info_plist &quot;$(SMJ_PREPROCESS_DIR)/___PACKAGENAME___/___PACKAGENAMEASIDENTIFIER___-Info.plist&quot; -sectcreate __TEXT __launchd_plist &quot;$(SMJ_PREPROCESS_DIR)/___PACKAGENAME___/___PACKAGENAMEASIDENTIFIER___-Launchd.plist&quot;</string>
			</dict>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>ShellScript</string>
					<key>ShellPath</key>
					<string>/usr/bin/env ruby</string>
					<key>ShellScript</key>
					<string># Generic preprocessing for ${ENV_VAR} with output to the build dir.

require &apos;cgi&apos;
require &apos;fileutils&apos;

missing_keys = [&apos;BUILD_DIR&apos;, &apos;CODE_SIGN_IDENTITY&apos;, &apos;SMJ_PREPROCESS_FILES&apos;, &apos;SMJ_PREPROCESS_DIR&apos;] - ENV.keys
raise &quot;Missing required ENV values: #{missing_keys.inspect}&quot; if missing_keys.size &gt; 0

# SMJ_PREPROCESS_FILES is a comma-separated list of *relative* file paths to preprocess
#  and spit out into the SMJ_PREPROCESS_DIR (w/ the same relative paths as given)
files_to_preprocess = ENV[&apos;SMJ_PREPROCESS_FILES&apos;].split(&apos;,&apos;).map(&amp;:strip)


# Environment Cleanup
# -------------------
dummy_path = &quot;#{ENV[&apos;BUILD_DIR&apos;]}/SMJobKitCodeSigningDummy&quot;

identity = ENV[&apos;CODE_SIGN_IDENTITY&apos;]
# If you use the generic code signing identity, chances are that it&apos;ll conflict.
identity = &quot;#{identity}:&quot; if identity.end_with? &apos; Developer&apos;

# We can&apos;t seem to get direct access to the code signing certificate that Xcode has
# selected at this point :(
`touch #{dummy_path}`
`codesign --force --sign &quot;#{identity}&quot; &quot;#{dummy_path}&quot;`
result = `codesign --display --verbose --verbose &quot;#{dummy_path}&quot; 2&gt;&amp;1`
`rm #{dummy_path}`

ENV[&apos;CODE_SIGN_IDENTITY&apos;] = result[/Authority\=(.*#{Regexp.escape(identity)}.*)/, 1]


# Actual Preprocessing
# --------------------

files_to_preprocess.each do |path|
  target_path = File.join(ENV[&apos;SMJ_PREPROCESS_DIR&apos;], path)
  FileUtils.mkpath File.dirname(target_path)

  open(path) do |input|
    open(target_path, &apos;w&apos;) do |output|
      # Specify macros via ${VAR_NAME} in the preprocessed file.  Same as regular
      # Info.plist preprocessing.
      output.write input.read.gsub(/\$\{([A-Z_]+)\}/) { CGI.escapeHTML(ENV[$1]) }
    end
    puts target_path
  end
end</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Sources</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Frameworks</string>
				</dict>
			</array>
			<key>Frameworks</key>
			<array>
				<string>Foundation</string>
			</array>
		</dict>
	</array>
	<key>Nodes</key>
	<array>
		<string>main.m</string>
    <string>___PACKAGENAMEASIDENTIFIER___-Info.plist</string>
    <string>___PACKAGENAMEASIDENTIFIER___-Launchd.plist</string>
	</array>
	<key>Definitions</key>
	<dict>
		<key>main.m</key>
		<dict>
			<key>Path</key>
			<string>main.m</string>
		</dict>
		<key>___PACKAGENAMEASIDENTIFIER___-Info.plist</key>
		<dict>
			<key>Path</key>
			<string>___PACKAGENAMEASIDENTIFIER___-Info.plist</string>
		</dict>
    <key>___PACKAGENAMEASIDENTIFIER___-Launchd.plist</key>
		<dict>
			<key>Path</key>
			<string>___PACKAGENAMEASIDENTIFIER___-Launchd.plist</string>
		</dict>
	</dict>
</dict>
</plist>
